{"version":3,"sources":["star.png","Navbar.js","Search.js","Home.js","Favourites.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Link","to","NavLink","exact","Search","state","beers","url","handleChangeUrl","e","target","value","length","_this","setState","handleSendUrl","preventDefault","axios","get","then","res","data","this","props","searchBeers","action","onSubmit","type","placeholder","onChange","Component","Home","favId","handleClick","id","index","findIndex","getId","classList","_this2","_this3","Allbeers","map","beer","key","src","image_url","alt","height","name","description","Star","width","onClick","src_Search","Favourites","_ref","App","some","b","concat","Object","toConsumableArray","BrowserRouter","src_Navbar","Route","path","component","src_Home","src_Favourites","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a544a8d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.12aaa566.png\";","import React from 'react';\r\nimport { Link, NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Navbar = () => {\r\n  \r\n    return(\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo\">First React Appi</Link>\r\n            <ul className=\"right\">\r\n                <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n                <li><NavLink to=\"/Favourites\">Favourites</NavLink></li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        beers: [], \r\n        url: \"\"\r\n    }\r\n    \r\n    handleChangeUrl = (e) => {\r\n        if(e.target.value.length > 0){\r\n            this.setState({\r\n                url : \"https://api.punkapi.com/v2/beers?beer_name=\" + e.target.value\r\n            })\r\n        } else {\r\n            this.setState({\r\n                url: \"https://api.punkapi.com/v2/beers?page=1&per_page=20\"\r\n            })\r\n        }\r\n    }\r\n    handleSendUrl = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.url.length > 0){\r\n        axios.get(this.state.url)\r\n            .then(res => {\r\n                this.setState({\r\n                    beers: res.data\r\n                },function(){\r\n                    \r\n                    this.props.searchBeers(this.state.beers);\r\n                })\r\n            })\r\n        }\r\n            \r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"searchbeer\">\r\n                <form action=\"\" onSubmit={this.handleSendUrl}>\r\n                <input type=\"text\" placeholder=\"search for beer\" onChange={this.handleChangeUrl}/>\r\n                <button className=\"btn\">Search</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport Star from './star.png'\r\nimport Search from './Search'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        beers: [], url: 'https://api.punkapi.com/v2/beers?page=1&per_page=20',\r\n        favId: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(this.state.url)\r\n            .then(res => {\r\n                this.setState({\r\n                    beers: res.data\r\n                })\r\n            })\r\n    }\r\n    \r\n    handleClick = (e) => {\r\n        let id = e.target.id;\r\n      /*   let idList = [...this.state.favId, id]\r\n        this.setState({\r\n            favId: idList\r\n        }) */\r\n        \r\n        let index = this.state.beers.findIndex(e => e.id == id);\r\n       // console.log(index);\r\n        this.props.getId(this.state.beers[index]);\r\n        e.target.classList = 'starclicked'\r\n    }\r\n    searchBeers = (beers) => {\r\n        this.setState({\r\n            beers: beers\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        const  beers = this.state.beers;\r\n        const Allbeers = beers.length ? (\r\n            beers.map(beer => {\r\n\r\n                /* let as = this.state.favId.some(i => {\r\n                    return i === beer.id\r\n                  })\r\n                  if(as){console.log(as);} */\r\n                  \r\n\r\n                return (\r\n                    <div className=\"beer card\" key={beer.id}>\r\n                        <img className=\"beeri\" src={beer.image_url} alt=\"\" height=\"200\"/>\r\n                        <h1>{beer.name}</h1>\r\n                        <p>{beer.description}</p>\r\n                        <img id={beer.id} className=\"star\" src={Star} alt=\"\" width=\"30\" onClick={this.handleClick}/>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div className=\"ceter\">Loading...</div>\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                    <Search searchBeers={this.searchBeers}/>\r\n                <div className=\"grid\">\r\n                    {Allbeers}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n\r\nconst Favourites = ({beers}) => {\r\n\r\n        const Allbeers = beers.length ? (\r\n            beers.map(beer => {\r\n                return (\r\n                    <div className=\"beer card\" key={beer.id}>\r\n                        <img className=\"beeri\" src={beer.image_url} alt=\"\" height=\"200\"/>\r\n                        <h1>{beer.name}</h1>\r\n                        <p>{beer.description}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            <div className=\"ceter\">Loading...</div>\r\n        )\r\n    return (\r\n        <div className=\"container\">\r\n                <div className=\"grid\">\r\n                    {Allbeers}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Favourites","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport Favourites from './Favourites'\n\nclass App extends Component {\n  state = {\n    beers: []\n  }\n  shouldComponentUpdate() {\n    return false; // Will cause component to never re-render.\n}\n  getId = (beer) => {\n  let currentBeers = this.state.beers;\n  let isOnList = currentBeers.some(b => {\n    return b.id === beer.id\n  })\n    if(!isOnList) {\n      let beers = [...this.state.beers, beer];\n        this.setState({\n          beers: beers\n        })\n    }\n  }\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Route exact path='/' component={(props) => <Home getId={this.getId}/>}/>\n        <Route path='/Favourites' component={(props) => <Favourites beers={this.state.beers}/>}/>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}